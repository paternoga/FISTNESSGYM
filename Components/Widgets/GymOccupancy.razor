@page "/gym-occupancy"
@inject IJSRuntime JSRuntime

<RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 340px; height: 160px;">
    <h4 style="color: red; font-weight: 600; margin-top: 0px">Liczba osób na siłowni</h4>
    <RadzenRow>
        <RadzenColumn Size="6">
            <div style="display: flex; flex-direction: column; align-items: start;">
                <h4 style="margin: 0; color: #007acc; font-weight: 600;">Aktualnie</h4>
                <strong style="font-size: 24px; color: #3a3a3a;">@CurrentOccupancy</strong>
                <p style="margin-top: 5px; color: #757575; font-size: 14px;">
                    osób
                </p>
            </div>
        </RadzenColumn>
        <RadzenColumn Size="6">
            <div style="display: flex; flex-direction: column; align-items: end;">
                <h4 style="margin: 0; color: #007acc; font-weight: 600;">Godzinę temu</h4>
                <strong style="font-size: 24px; color: #3a3a3a;">@PreviousOccupancy</strong>
                <p style="margin-top: 5px; color: #757575; font-size: 14px;">
                    osób
                </p>
            </div>
        </RadzenColumn>
    </RadzenRow>
</RadzenCard>

@code {
    private int CurrentOccupancy;
    private int PreviousOccupancy;
    private static readonly Random RandomGen = new Random();
    private Timer timer;

    protected override void OnInitialized()
    {
        PreviousOccupancy = GenerateOccupancy(DateTime.Now.AddHours(-1).Hour);
        CurrentOccupancy = GenerateOccupancy(DateTime.Now.Hour);

        timer = new Timer(UpdateOccupancy, null, TimeSpan.Zero, TimeSpan.FromMinutes(1));
    }

    private void UpdateOccupancy(object state)
    {
        PreviousOccupancy = CurrentOccupancy;
        CurrentOccupancy = GenerateOccupancy(DateTime.Now.Hour);

        InvokeAsync(StateHasChanged);
    }

    private int GenerateOccupancy(int hour)
    {
        if (hour >= 6 && hour < 9)
        {
            return RandomGen.Next(5, 20);
        }
        else if (hour >= 9 && hour < 12)
        {
            return RandomGen.Next(15, 30);
        }
        else if (hour >= 12 && hour < 17)
        {
            return RandomGen.Next(20, 35);
        }
        else if (hour >= 17 && hour < 21)
        {
            return RandomGen.Next(30, 50);
        }
        else
        {
            return RandomGen.Next(0, 10);
        }
    }

    public void Dispose()
    {
        timer?.Dispose();
    }
}
