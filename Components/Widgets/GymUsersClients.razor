@page "/gym-admin-widget"
@inject databaseService DatabaseService
@using FISTNESSGYM.Services
@using FISTNESSGYM.Models.database
@inject IJSRuntime JSRuntime

<RadzenRow>
    <!-- Liczba osób na siłowni -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 0px">Liczba osób na siłowni</h4>
            <RadzenRow>
                <RadzenColumn Size="6">
                    <div style="display: flex; flex-direction: column; align-items: start;">
                        <h4 style="margin: 0; color: #007acc; font-weight: 600;">Aktualnie</h4>
                        <strong style="font-size: 24px; color: #3a3a3a;">@CurrentOccupancy</strong>
                        <p style="margin-top: 5px; color: #757575; font-size: 14px;">osób</p>
                    </div>
                </RadzenColumn>
                <RadzenColumn Size="6">
                    <div style="display: flex; flex-direction: column; align-items: end;">
                        <h4 style="margin: 0; color: #007acc; font-weight: 600;">Godzinę temu</h4>
                        <strong style="font-size: 24px; color: #3a3a3a;">@PreviousOccupancy</strong>
                        <p style="margin-top: 5px; color: #757575; font-size: 14px;">osób</p>
                    </div>
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </RadzenColumn>

    <!-- Zysk ze sprzedaży -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; text-align: center; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 0px;">Zysk ze sprzedaży</h4>
            <RadzenRow>
                <RadzenColumn Size="12">
                    <div style="display: flex; flex-direction: column; align-items: start;">
                        <h4 style="margin: 0; color: #007acc; font-weight: 600;">W tym miesiącu</h4>
                        <strong style="font-size: 24px; color: #3a3a3a;">@adminWidgetProfitThisMonthValue?.ToString("C")</strong>
                    </div>
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </RadzenColumn>

    <!-- Zysk z Karnetów -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; text-align: center; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 0px;">Zysk z Karnetów</h4>
            <RadzenRow>
                <RadzenColumn Size="12">
                    <div style="display: flex; flex-direction: column; align-items: start;">
                        <h4 style="margin: 0; color: #007acc; font-weight: 600;">W tym miesiącu</h4>
                        <strong style="font-size: 24px; color: #3a3a3a;">@subscriptionProfit?.ToString("C")</strong>
                    </div>
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </RadzenColumn>


    <!-- Liczba użytkowników siłowni -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 0px;">Liczba użytkowników</h4>
            <RadzenRow>
                <RadzenColumn Size="6">
                    <div style="display: flex; flex-direction: column; align-items: start;">
                        <h4 style="margin: 0; color: #007acc; font-weight: 600;">Użytkownicy</h4>
                        <strong style="font-size: 24px; color: #3a3a3a;">@TotalUsers</strong>
                        <p style="margin-top: 5px; color: #757575; font-size: 14px;">osób</p>
                    </div>
                </RadzenColumn>
                <RadzenColumn Size="6">
                    <div style="display: flex; flex-direction: column; align-items: end;">
                        <h4 style="margin: 0; color: #007acc; font-weight: 600;">Klienci</h4>
                        <strong style="font-size: 24px; color: #3a3a3a;">@TotalClients</strong>
                        <p style="margin-top: 5px; color: #757575; font-size: 14px;">osób</p>
                    </div>
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<RadzenRow Style="margin-top: 20px;">
    <!-- Ostatnia osoba z karnetem -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 5px;">Ostatnia osoba, która zakupiła karnet</h4>
            <strong style="font-size: 20px; color: #3a3a3a;">@LastSubscriptionEmail</strong>
            <p style="color: #757575; margin-top: 10px;">Dziękujemy za zakup!</p>
        </RadzenCard>
    </RadzenColumn>

    <!-- Najnowsze wydarzenie -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; margin-top: 1px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px;">Najnowsze wydarzenie</h4>
            @if (latestEvent != null)
            {
                <div>
                    <h4 style="color: #007acc; margin-top: 1px;">@latestEvent.EventName</h4>
                    <p style="color: #757575; margin-top: 1px;">Prowadzący: @latestEvent.InstructorName</p>
                    <p style="color: #757575; margin-top: 1px;">@latestEvent.EventStartDate.ToString("dd MMM yyyy, HH:mm") - @latestEvent.EventEndDate.ToString("HH:mm")</p>
                    <p style="color: #757575; margin-top: 1px;">Uczestnicy: @latestEvent.Participants / @latestEvent.MaxParticipants</p>
                </div>
            }
            else
            {
                <p>Brak dostępnych wydarzeń.</p>
            }
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px;">Liczba trenerów</h4>
            <div>
                <h4 style="color: #007acc; font-weight: 600; margin-top: 1px;">Razem:</h4>
                <strong style="font-size: 24px; color: #3a3a3a; margin-top: 1px;">@TotalTrainers</strong>
                <p style="color: #757575; font-size: 14px; margin-top: 1px;">osoby</p>
            </div>
        </RadzenCard>
    </RadzenColumn>

    <!-- Liczba pracowników -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px;">Liczba pracowników</h4>
            <div>
                <h4 style="color: #007acc; font-weight: 600; margin-top: 1px;">Razem:</h4>
                <strong style="font-size: 24px; color: #3a3a3a; margin-top: 1px;">@TotalEmployees</strong>
                <p style="color: #757575; font-size: 14px; margin-top: 1px;">osoby</p>
            </div>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<RadzenRow Style="margin-top: 20px; ">
    <!-- Widget - Godziny zmarnowane na tworzeniu -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px;">Godziny zmarnowane na tworzeniu</h4>
            <div>
                <h4 style="color: #007acc; font-weight: 600; margin-top: 1px;">Razem:</h4>
                <strong style="font-size: 24px; color: #3a3a3a; margin-top: 1px;">@TotalHoursWasted</strong>
                <p style="color: #757575; font-size: 14px; margin-top: 1px;">godzin</p>
            </div>
        </RadzenCard>
    </RadzenColumn>

    <!-- Widget - Ilość prądu zmarnowana -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; margin-top: 1px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px;">Ilość prądu zmarnowana</h4>
            <div>
                <h4 style="color: #007acc; font-weight: 600; margin-top: 1px;">Zużycie:</h4>
                <strong style="font-size: 24px; color: #3a3a3a;">@PowerUsage</strong>
                <p style="color: #757575; font-size: 14px; margin-top: 1px;">kWh w tym miesiącu</p>
            </div>
        </RadzenCard>
    </RadzenColumn>

    <!-- Widget - Łzy wylane nad kodem -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; margin-top: 1px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px">Łzy wylane nad kodem</h4>
            <div>
                <h4 style="color: #007acc; font-weight: 600; margin-top: 1px;">Łzy:</h4>
                <strong style="font-size: 24px; color: #3a3a3a;">@TearsShed</strong>
                <p style="color: #757575; font-size: 14px; margin-top: 1px;">litry w tym miesiącu</p>
            </div>
        </RadzenCard>
    </RadzenColumn>

    <!-- Widget - Koszt leczenia dla programisty -->
    <RadzenColumn Size="3">
        <RadzenCard Style="padding: 20px; margin-top: 1px; border-radius: 8px; border: 1px solid #e0e0e0; width: 100%; height: 150px; max-height: 200px; display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
            <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 1px;">Koszt leczenia dla programisty</h4>
            <div>
                <h4 style="color: #007acc; font-weight: 600; margin-top: 1px;">Koszt:</h4>
                <strong style="font-size: 24px; color: #3a3a3a; margin-top: 1px;">@TreatmentCost?.ToString("C")</strong>
                <p style="color: #757575; font-size: 14px; margin-top: 1px;">PLN (w tym miesiącu)</p>
            </div>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>


@code {
    private int CurrentOccupancy;
    private int PreviousOccupancy;
    private int TotalUsers;
    private int TotalClients;
    private decimal? adminWidgetProfitThisMonthValue;  // Nullable decimal
    private readonly string clientRoleId = "86cb68e7-01a4-4325-a118-f39d9e8510c9";
    private static readonly Random RandomGen = new Random();
    private Timer timer;
    private decimal? subscriptionProfit;
    private string LastSubscriptionEmail;
    private Event latestEvent;
    private int TotalTrainers;
    private int TotalEmployees;

    //
    private int TotalHoursWasted = 1537; // Przykładowa liczba godzin
    private int PowerUsage = 350; // Przykładowa liczba zużycia energii (kWh)
    private int TearsShed = 7; // Przykładowa liczba litrów łez
    private decimal? TreatmentCost = 125678.45M; // Przykładowy koszt leczenia (PLN)


    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Pobierz liczbę wszystkich użytkowników
            TotalUsers = await DatabaseService.GetTotalUsersCountAsync();

            // Pobierz liczbę użytkowników w roli "Klient"
            TotalClients = await DatabaseService.GetClientsCountAsync(clientRoleId);

            PreviousOccupancy = GenerateOccupancy(DateTime.Now.AddHours(-1).Hour);
            CurrentOccupancy = GenerateOccupancy(DateTime.Now.Hour);
            timer = new Timer(UpdateOccupancy, null, TimeSpan.Zero, TimeSpan.FromMinutes(1));

            // Pobierz zysk ze sprzedaży w bieżącym miesiącu
            adminWidgetProfitThisMonthValue = await DatabaseService.GetAdminWidgetProfitThisMonthAsync();


            // Pobierz zysk z karnetów w bieżącym miesiącu
            subscriptionProfit = await DatabaseService.GetProfitFromSubscriptionsThisMonthAsync();

            var lastSubscription = await DatabaseService.GetLastSubscriptionAsync();
            if (lastSubscription != null)
            {
                LastSubscriptionEmail = lastSubscription.Email;
            }

            latestEvent = await DatabaseService.GetLatestEventAsync();

            TotalTrainers = await DatabaseService.GetTotalTrainersCountAsync();
            TotalEmployees = await DatabaseService.GetTotalEmployeesCountAsync();

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Błąd podczas ładowania danych: {ex.Message}");
        }

        // Generowanie liczby osób na siłowni
        PreviousOccupancy = GenerateOccupancy(DateTime.Now.AddHours(-1).Hour);
        CurrentOccupancy = GenerateOccupancy(DateTime.Now.Hour);

        timer = new Timer(UpdateOccupancy, null, TimeSpan.Zero, TimeSpan.FromMinutes(1));
    }

    private void UpdateOccupancy(object state)
    {
        PreviousOccupancy = CurrentOccupancy;
        CurrentOccupancy = GenerateOccupancy(DateTime.Now.Hour);

        InvokeAsync(StateHasChanged);
    }

    private int GenerateOccupancy(int hour)
    {
        if (hour >= 6 && hour < 9)
        {
            return RandomGen.Next(5, 20);
        }
        else if (hour >= 9 && hour < 12)
        {
            return RandomGen.Next(15, 30);
        }
        else if (hour >= 12 && hour < 17)
        {
            return RandomGen.Next(20, 35);
        }
        else if (hour >= 17 && hour < 21)
        {
            return RandomGen.Next(30, 50);
        }
        else
        {
            return RandomGen.Next(0, 10);
        }
    }

    public void Dispose()
    {
        timer?.Dispose();
    }





}
