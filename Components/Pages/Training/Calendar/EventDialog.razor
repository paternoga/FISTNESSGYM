@page "/event-dialog"
@using FISTNESSGYM.Components.Pages.Calendar
@inject DialogService DialogService

<RadzenTemplateForm TItem="SchedulerEvent" Data="@model" Submit="@OnSubmit">
    <RadzenStack Gap="1rem">
        <!-- Field for Event Title -->
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Tytuł" Style="width: 8rem;" />
            <RadzenTextBox @bind-Value="model.Title" Name="Title" Style="width: 15rem;" />
            <RadzenRequiredValidator Component="Title" Text="Tytuł jest wymagany" />
        </RadzenStack>

        <!-- Field for Instructor Name -->
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Instruktor" Style="width: 8rem;" />
            <RadzenTextBox @bind-Value="model.InstructorName" Name="InstructorName" Style="width: 15rem;" />
            <RadzenRequiredValidator Component="InstructorName" Text="Imię instruktora jest wymagane" />
        </RadzenStack>

        <!-- Field for Start Date and Time -->
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Początek" Style="width: 8rem;" />
            <RadzenDatePicker @bind-Value="model.Start" Name="Start" ShowTime="true" Style="width: 15rem;" />
            <RadzenRequiredValidator Component="Start" Text="Czas rozpoczęcia jest wymagany" />
        </RadzenStack>

        <!-- Field for End Date and Time -->
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Koniec" Style="width: 8rem;" />
            <RadzenDatePicker Name="End" @bind-Value="model.End" ShowTime="true" Style="width: 15rem;" />
            <RadzenRequiredValidator Component="End" Text="Czas zakończenia jest wymagany" />
        </RadzenStack>

        <!-- Field for Maximum Participants -->
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Liczba uczestników" Style="width: 8rem;" />
            <RadzenNumeric @bind-Value="model.MaxParticipants" Name="MaxParticipants" Style="width: 15rem;" />

            <!-- Validator to ensure the field is required -->
            <RadzenRequiredValidator Component="MaxParticipants" Text="Maksymalna liczba uczestników jest wymagana" />

            <!-- Validator to ensure the value is at least 1 -->
            <RadzenNumericRangeValidator Component="MaxParticipants" Min="1" Text="Liczba uczestników nie może być mniejsza niż 1" />
        </RadzenStack>



        <!-- Save Button -->
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Zapisz" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter]
    public DateTime Start { get; set; }

    [Parameter]
    public DateTime End { get; set; }

    [Parameter]
    public SchedulerEvent EventItem { get; set; }

    SchedulerEvent model = new SchedulerEvent();

    protected override void OnParametersSet()
    {
        // Initialize model based on provided EventItem for editing
        if (EventItem != null)
        {
            model = EventItem;
        }
        else
        {
            model.Start = Start;
            model.End = End;
            model.MaxParticipants = 1; 
        }
    }

    void OnSubmit()
    {
        // Close the dialog and return the modified event
        DialogService.Close(model);
    }
}
