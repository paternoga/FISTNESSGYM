@page "/settings/subscription/purchase"
@using System.Security.Claims
@using FISTNESSGYM.Models.database
@using FISTNESSGYM.Services
@inject ISubscriptionService SubscriptionService
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>PAKIETY</PageTitle>

<h3>Trenuj w najlepszej cenie!</h3>
<h4> Dołącz do społeczności, która wspiera się w budowaniu zdrowych nawyków i trenuj w ponad 60 miastach w całej Polsce.</h4>

<RadzenColumn Size="12" SizeMD="6">
    <RadzenText Text="Pakiety karnetów" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
</RadzenColumn>
<RadzenCard Style="box-shadow: none;">
    @if (hasActiveSubscription)
    {
        <p>Nie możesz zakupić nowej subskrypcji, ponieważ masz już aktywną subskrypcję.</p>
    }
    else
    {
            <RadzenCarousel @ref="carousel" @bind-SelectedIndex="@selectedIndex" Auto="@auto" Interval="@interval" PagerOverlay="false" ButtonShade="Shade.Default" Style="height:320px">
                <Items>
                    <RadzenCarouselItem>
                        <RadzenCard style="box-shadow: 0px 1px 0px 0px darkgray;" class="rz-w-75 rz-text-center">
                            <h4>Karnet miesięczny</h4>
                            <p>Cena: 99 zł / miesiąc</p>
                            <p>Doskonała propozycja dla osób, które szukają elastyczności i wolą korzystać z naszych usług bez długoterminowych zobowiązań. <br />
                                Za jedyne 99 zł miesięcznie otrzymasz pełen dostęp do wszystkich funkcji, co pozwoli Ci cieszyć się wygodą i najwyższą jakością usług na wyciągnięcie ręki. 
                                Idealne rozwiązanie, jeśli chcesz sprawdzić, czy nasza oferta odpowiada Twoim potrzebom!</p>
                            <p></p>
                            <RadzenButton Text="Kup karnet miesięczny" Click="() => Purchase(1)" ButtonStyle="ButtonStyle.Primary" />
                        </RadzenCard>
                    </RadzenCarouselItem>
                    <RadzenCarouselItem>
                        <RadzenCard style="box-shadow: 0px 1px 0px 0px darkgray;" class="rz-w-75 rz-text-center">
                            <h4>Karnet roczny</h4>
                            <p>Cena: 950 zł / rok</p>
                            <p>Dla regularnych użytkowników, którzy chcą czerpać maksymalne korzyści i oszczędzać! Wybierając „Subskrypcję Roczną” za 950 zł, 
                                zyskujesz znacznie niższy miesięczny koszt w porównaniu z planem miesięcznym. <br />Dzięki rocznej subskrypcji możesz korzystać z pełnej oferty naszych usług 
                                bez konieczności odnawiania planu co miesiąc, co daje Ci spokój i wygodę przez cały rok.</p>
                            <p></p>
                            <RadzenButton Text="Kup karnet roczny" Click="() => Purchase(2)" ButtonStyle="ButtonStyle.Primary" />
                        </RadzenCard>
                    </RadzenCarouselItem>
                    <RadzenCarouselItem>
                        <RadzenCard style="box-shadow: 0px 1px 0px 0px darkgray;" class="rz-w-75 rz-text-center">
                            <h4>Karnet próbny</h4>
                            <p>Cena: 1 zł</p>
                            <p>Zastanawiasz się, czy nasze usługi są dla Ciebie? Skorzystaj z „Subskrypcji Próbnej” i wypróbuj naszą ofertę przez jeden dzień za symboliczne 1 zł. <br />
                                To doskonała okazja, by przetestować nasze funkcje i poznać naszą platformę bez większego zobowiązania. W ten sposób możesz łatwo sprawdzić, 
                                czy nasze usługi odpowiadają Twoim oczekiwaniom!</p>
                            <p></p>
                            <RadzenButton Text="Kup karnet próbny" Click="() => Purchase(3)" ButtonStyle="ButtonStyle.Primary" />
                        </RadzenCard>
                    </RadzenCarouselItem>
                </Items>
            </RadzenCarousel>
    }
</RadzenCard>

@code {
    RadzenCarousel carousel;
    bool auto = true;
    double interval = 4000;
    bool started = true;
    int selectedIndex;

    private string userId;
    private bool hasActiveSubscription;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value; 
            hasActiveSubscription = await SubscriptionService.GetCurrentSubscriptionAsync(userId) != null; 
        }
        else
        {
            throw new Exception("Użytkownik nie jest zalogowany.");
        }

        StateHasChanged();
    }

    private async Task Purchase(int subscriptionTypeId)
    {
        if (hasActiveSubscription)
        {
            Console.WriteLine("Nie możesz kupić nowej subskrypcji, ponieważ masz już aktywną subskrypcję.");
            return;
        }

        try
        {
            await SubscriptionService.PurchaseSubscriptionAsync(userId, subscriptionTypeId);
            Console.WriteLine("Zakup subskrypcji zakończony sukcesem.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Błąd podczas zakupu subskrypcji: {ex.Message}");
        }

        StateHasChanged();
    }


}
