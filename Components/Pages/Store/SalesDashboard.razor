@page "/sales-dashboard"
@inject ICartService CartService
@inject AuthenticationStateProvider AuthenticationStateProvider
@using FISTNESSGYM.Models.database
@using FISTNESSGYM.Models.Database
@using FISTNESSGYM.Services
@using Radzen

@attribute [Authorize]

<div style="display: flex; gap: 20px;">
    <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 340px; height: 160px;">
        <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 0px;">Sprzedane produkty dzisiaj</h4>

        @if (totalSoldToday > 0)
        {
            <div style="display: flex; align-items: center; justify-content: space-between;">
                <span style="color: #3a3a3a; font-weight: 500;">£¹czna liczba:</span>
                <span style="font-size: 22px; color: #085786; font-weight: 600;">@totalSoldToday</span>
            </div>
        }
        else
        {
            <p style="color: #757575;">Brak sprzedanych produktów dzisiaj.</p>
        }
    </RadzenCard>

    <RadzenCard Style="padding: 20px; border-radius: 8px; border: 1px solid #e0e0e0; width: 340px; height: 160px;">
        <h4 style="color: #3a3a3a; font-weight: 600; margin-top: 0px;">Obrót dzisiaj</h4>

        @if (totalRevenueToday > 0)
        {
            <div style="display: flex; align-items: center; justify-content: space-between;">
                <span style="color: #3a3a3a; font-weight: 500;">£¹czna kwota:</span>
                <span style="font-size: 22px; color: #085786; font-weight: 600;">@totalRevenueToday</span>
            </div>
        }
        else
        {
            <p style="color: #757575;">Brak zarobionych pieniêdzy dzisiaj.</p>
        }
    </RadzenCard>
</div>

<RadzenStack>
    <RadzenCard>
        <div style="margin-bottom: 20px; display: flex; justify-content: space-between;">
            <RadzenDropDown @bind-Value="selectedMonth" Data="@monthList" TextProperty="Text" ValueProperty="Value" Style="width: 150px;" />
            <RadzenDropDown @bind-Value="selectedYear" Data="@yearList" TextProperty="Text" ValueProperty="Value" Style="width: 150px;" />
            <RadzenButton Text="Filtruj" Click="@OnFilterClick" Style="height: 36px; width: 100px;" />
        </div>

        <RadzenChart>
            <RadzenColumnSeries Data="@salesData" CategoryProperty="Date" ValueProperty="Quantity" Title="Sprzedane produkty">
                <RadzenSeriesDataLabels Visible="true" />
            </RadzenColumnSeries>

            <RadzenCategoryAxis>
                <RadzenAxisTitle Text="Data" />
            </RadzenCategoryAxis>

            <RadzenValueAxis>
                <RadzenAxisTitle Text="Iloœæ sprzedanych produktów" />
            </RadzenValueAxis>
        </RadzenChart>
    </RadzenCard>
</RadzenStack>

@code {
    private decimal totalRevenueToday;
    private int totalSoldToday;
    private List<SalesData> salesData = new List<SalesData>();

    private int selectedMonth = DateTime.Today.Month;
    private int selectedYear = DateTime.Today.Year;

    private List<DropDownItem> monthList = new List<DropDownItem>
    {
        new DropDownItem { Text = "Styczeñ", Value = 1 },
        new DropDownItem { Text = "Luty", Value = 2 },
        new DropDownItem { Text = "Marzec", Value = 3 },
        new DropDownItem { Text = "Kwiecieñ", Value = 4 },
        new DropDownItem { Text = "Maj", Value = 5 },
        new DropDownItem { Text = "Czerwiec", Value = 6 },
        new DropDownItem { Text = "Lipiec", Value = 7 },
        new DropDownItem { Text = "Sierpieñ", Value = 8 },
        new DropDownItem { Text = "Wrzesieñ", Value = 9 },
        new DropDownItem { Text = "PaŸdziernik", Value = 10 },
        new DropDownItem { Text = "Listopad", Value = 11 },
        new DropDownItem { Text = "Grudzieñ", Value = 12 }
    };

    private List<DropDownItem> yearList = new List<DropDownItem>
    {
        new DropDownItem { Text = (DateTime.Today.Year - 1).ToString(), Value = DateTime.Today.Year - 1 },
        new DropDownItem { Text = DateTime.Today.Year.ToString(), Value = DateTime.Today.Year },
        new DropDownItem { Text = (DateTime.Today.Year + 1).ToString(), Value = DateTime.Today.Year + 1 }
    };

    protected override async Task OnInitializedAsync()
    {
        await LoadSalesData();
        totalSoldToday = await CartService.GetTotalSoldTodayAsync();

        var orderItems = await CartService.GetOrderItemsSoldTodayAsync();

        totalRevenueToday = orderItems
            .Where(item => item.CreationDate.Date == DateTime.Today)
            .Sum(item => item.Quantity * item.UnitPrice);
    }

    private async Task OnFilterClick()
    {
        await LoadSalesData();
    }

    private async Task LoadSalesData()
    {
        salesData = await CartService.GetSalesDataForMonthAsync(selectedYear, selectedMonth);
    }

    public class DropDownItem
    {
        public string Text { get; set; }
        public int Value { get; set; }
    }
}
