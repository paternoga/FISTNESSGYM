@page "/"
@using FISTNESSGYM.Components.Widgets
@using FISTNESSGYM.Models.database
@using FISTNESSGYM.Services
@using System.Security.Claims
@inject SubscriptionService SubscriptionService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AuthorizationService AuthorizationService

@attribute [Authorize]
<PageTitle>STRONA G£ÓWNA</PageTitle>



@if (AuthorizationService.IsUser)
{
    <RadzenRow>
        <RadzenColumn Size="3">
            @if (currentSubscription != null)
            {
                <SubscriptionStatus />
            }
        </RadzenColumn>

        <RadzenColumn Size="3">
            <Weather />
        </RadzenColumn>

        <RadzenColumn Size="3">
            <GymOccupancy/>
        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>
    </RadzenRow>
}

@if (AuthorizationService.IsClient)
{
    <RadzenRow>
        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>
    </RadzenRow>
}

@if (AuthorizationService.IsWorker)
{
    <RadzenRow>
        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>
    </RadzenRow>
}

@if (AuthorizationService.IsTrainer)
{
    <RadzenRow>
        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>

        <RadzenColumn Size="3">

        </RadzenColumn>
    </RadzenRow>
}

@if (AuthorizationService.IsAdmin)
{
    <RadzenRow>
        <RadzenColumn Size="3">
            
        </RadzenColumn>

        <RadzenColumn Size="3">
            
        </RadzenColumn>

        <RadzenColumn Size="3">
           
        </RadzenColumn>

        <RadzenColumn Size="3">
            
        </RadzenColumn>
    </RadzenRow>
}

<RadzenSearchBar Placeholder="Szukaj..." />

@code {
    private Subscription currentSubscription;
    private string userId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        currentSubscription = await SubscriptionService.GetCurrentSubscriptionAsync(userId);
    }

}